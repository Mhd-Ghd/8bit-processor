|simple8BitProcessor
dataIn[0] => dataIn[0].IN1
dataIn[1] => dataIn[1].IN1
dataIn[2] => dataIn[2].IN1
dataIn[3] => dataIn[3].IN1
dataIn[4] => dataIn[4].IN1
dataIn[5] => dataIn[5].IN1
dataIn[6] => dataIn[6].IN1
dataIn[7] => dataIn[7].IN1
dataOut[0] << dataPath:DP.port3
dataOut[1] << dataPath:DP.port3
dataOut[2] << dataPath:DP.port3
dataOut[3] << dataPath:DP.port3
dataOut[4] << dataPath:DP.port3
dataOut[5] << dataPath:DP.port3
dataOut[6] << dataPath:DP.port3
dataOut[7] << dataPath:DP.port3
func[0] => Ry[0].IN1
func[1] => Ry[1].IN1
func[2] => Ry[2].IN1
func[3] => Rx[0].IN1
func[4] => Rx[1].IN1
func[5] => Rx[2].IN1
func[6] => opCode[0].IN1
func[7] => opCode[1].IN1
func[8] => opCode[2].IN1
clock => clock.IN1


|simple8BitProcessor|controlUnit:CU
opCode[0] => Decoder0.IN2
opCode[1] => Decoder0.IN1
opCode[1] => Decoder1.IN1
opCode[2] => Decoder0.IN0
opCode[2] => Decoder1.IN0
regWrite <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
selOp[0] <= ctrlSignals.DB_MAX_OUTPUT_PORT_TYPE
selOp[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
selOp[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
destSrc[0] <= ctrlSignals.DB_MAX_OUTPUT_PORT_TYPE
destSrc[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE


|simple8BitProcessor|dataPath:DP
dataIn[0] => dataIn[0].IN1
dataIn[1] => dataIn[1].IN1
dataIn[2] => dataIn[2].IN1
dataIn[3] => dataIn[3].IN1
dataIn[4] => dataIn[4].IN1
dataIn[5] => dataIn[5].IN1
dataIn[6] => dataIn[6].IN1
dataIn[7] => dataIn[7].IN1
Rx[0] => Rx[0].IN2
Rx[1] => Rx[1].IN2
Rx[2] => Rx[2].IN2
Ry[0] => Ry[0].IN1
Ry[1] => Ry[1].IN1
Ry[2] => Ry[2].IN1
dataOut[0] <= dataW[0].DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataW[1].DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataW[2].DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataW[3].DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataW[4].DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataW[5].DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataW[6].DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataW[7].DB_MAX_OUTPUT_PORT_TYPE
selOp[0] => selOp[0].IN1
selOp[1] => selOp[1].IN1
selOp[2] => selOp[2].IN1
destSrc[0] => destSrc[0].IN1
destSrc[1] => destSrc[1].IN1
regWrite => regWrite.IN1
clock => clock.IN1


|simple8BitProcessor|dataPath:DP|regFile:RF
ra[0] => rf.RADDR
ra[1] => rf.RADDR1
ra[2] => rf.RADDR2
rb[0] => rf.PORTBRADDR
rb[1] => rf.PORTBRADDR1
rb[2] => rf.PORTBRADDR2
rw[0] => rf.waddr_a[0].DATAIN
rw[0] => rf.WADDR
rw[1] => rf.waddr_a[1].DATAIN
rw[1] => rf.WADDR1
rw[2] => rf.waddr_a[2].DATAIN
rw[2] => rf.WADDR2
RegWr => rf.we_a.DATAIN
RegWr => rf.WE
dataA[0] <= rf.DATAOUT
dataA[1] <= rf.DATAOUT1
dataA[2] <= rf.DATAOUT2
dataA[3] <= rf.DATAOUT3
dataA[4] <= rf.DATAOUT4
dataA[5] <= rf.DATAOUT5
dataA[6] <= rf.DATAOUT6
dataA[7] <= rf.DATAOUT7
dataB[0] <= rf.PORTBDATAOUT
dataB[1] <= rf.PORTBDATAOUT1
dataB[2] <= rf.PORTBDATAOUT2
dataB[3] <= rf.PORTBDATAOUT3
dataB[4] <= rf.PORTBDATAOUT4
dataB[5] <= rf.PORTBDATAOUT5
dataB[6] <= rf.PORTBDATAOUT6
dataB[7] <= rf.PORTBDATAOUT7
dataW[0] => rf.data_a[0].DATAIN
dataW[0] => rf.DATAIN
dataW[1] => rf.data_a[1].DATAIN
dataW[1] => rf.DATAIN1
dataW[2] => rf.data_a[2].DATAIN
dataW[2] => rf.DATAIN2
dataW[3] => rf.data_a[3].DATAIN
dataW[3] => rf.DATAIN3
dataW[4] => rf.data_a[4].DATAIN
dataW[4] => rf.DATAIN4
dataW[5] => rf.data_a[5].DATAIN
dataW[5] => rf.DATAIN5
dataW[6] => rf.data_a[6].DATAIN
dataW[6] => rf.DATAIN6
dataW[7] => rf.data_a[7].DATAIN
dataW[7] => rf.DATAIN7
clk => rf.we_a.CLK
clk => rf.waddr_a[2].CLK
clk => rf.waddr_a[1].CLK
clk => rf.waddr_a[0].CLK
clk => rf.data_a[7].CLK
clk => rf.data_a[6].CLK
clk => rf.data_a[5].CLK
clk => rf.data_a[4].CLK
clk => rf.data_a[3].CLK
clk => rf.data_a[2].CLK
clk => rf.data_a[1].CLK
clk => rf.data_a[0].CLK
clk => rf.CLK0


|simple8BitProcessor|dataPath:DP|ALU:AS
parmA[0] => Add0.IN8
parmA[0] => Add1.IN16
parmA[0] => result.IN0
parmA[0] => result.IN0
parmA[0] => result.IN0
parmA[1] => Add0.IN7
parmA[1] => Add1.IN15
parmA[1] => result.IN0
parmA[1] => result.IN0
parmA[1] => result.IN0
parmA[2] => Add0.IN6
parmA[2] => Add1.IN14
parmA[2] => result.IN0
parmA[2] => result.IN0
parmA[2] => result.IN0
parmA[3] => Add0.IN5
parmA[3] => Add1.IN13
parmA[3] => result.IN0
parmA[3] => result.IN0
parmA[3] => result.IN0
parmA[4] => Add0.IN4
parmA[4] => Add1.IN12
parmA[4] => result.IN0
parmA[4] => result.IN0
parmA[4] => result.IN0
parmA[5] => Add0.IN3
parmA[5] => Add1.IN11
parmA[5] => result.IN0
parmA[5] => result.IN0
parmA[5] => result.IN0
parmA[6] => Add0.IN2
parmA[6] => Add1.IN10
parmA[6] => result.IN0
parmA[6] => result.IN0
parmA[6] => result.IN0
parmA[7] => Add0.IN1
parmA[7] => Add1.IN9
parmA[7] => result.IN0
parmA[7] => result.IN0
parmA[7] => result.IN0
parmB[0] => Add0.IN16
parmB[0] => result.IN1
parmB[0] => result.IN1
parmB[0] => result.IN1
parmB[0] => Add1.IN8
parmB[1] => Add0.IN15
parmB[1] => result.IN1
parmB[1] => result.IN1
parmB[1] => result.IN1
parmB[1] => Add1.IN7
parmB[2] => Add0.IN14
parmB[2] => result.IN1
parmB[2] => result.IN1
parmB[2] => result.IN1
parmB[2] => Add1.IN6
parmB[3] => Add0.IN13
parmB[3] => result.IN1
parmB[3] => result.IN1
parmB[3] => result.IN1
parmB[3] => Add1.IN5
parmB[4] => Add0.IN12
parmB[4] => result.IN1
parmB[4] => result.IN1
parmB[4] => result.IN1
parmB[4] => Add1.IN4
parmB[5] => Add0.IN11
parmB[5] => result.IN1
parmB[5] => result.IN1
parmB[5] => result.IN1
parmB[5] => Add1.IN3
parmB[6] => Add0.IN10
parmB[6] => result.IN1
parmB[6] => result.IN1
parmB[6] => result.IN1
parmB[6] => Add1.IN2
parmB[7] => Add0.IN9
parmB[7] => result.IN1
parmB[7] => result.IN1
parmB[7] => result.IN1
parmB[7] => Add1.IN1
selOp[0] => Mux0.IN10
selOp[0] => Mux1.IN10
selOp[0] => Mux2.IN10
selOp[0] => Mux3.IN10
selOp[0] => Mux4.IN10
selOp[0] => Mux5.IN10
selOp[0] => Mux6.IN10
selOp[0] => Mux7.IN10
selOp[1] => Mux0.IN9
selOp[1] => Mux1.IN9
selOp[1] => Mux2.IN9
selOp[1] => Mux3.IN9
selOp[1] => Mux4.IN9
selOp[1] => Mux5.IN9
selOp[1] => Mux6.IN9
selOp[1] => Mux7.IN9
selOp[2] => Mux0.IN8
selOp[2] => Mux1.IN8
selOp[2] => Mux2.IN8
selOp[2] => Mux3.IN8
selOp[2] => Mux4.IN8
selOp[2] => Mux5.IN8
selOp[2] => Mux6.IN8
selOp[2] => Mux7.IN8
result[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|simple8BitProcessor|dataPath:DP|MUX3:mux
in1[0] => Mux7.IN0
in1[1] => Mux6.IN0
in1[2] => Mux5.IN0
in1[3] => Mux4.IN0
in1[4] => Mux3.IN0
in1[5] => Mux2.IN0
in1[6] => Mux1.IN0
in1[7] => Mux0.IN0
in2[0] => Mux7.IN1
in2[1] => Mux6.IN1
in2[2] => Mux5.IN1
in2[3] => Mux4.IN1
in2[4] => Mux3.IN1
in2[5] => Mux2.IN1
in2[6] => Mux1.IN1
in2[7] => Mux0.IN1
in3[0] => Mux7.IN2
in3[1] => Mux6.IN2
in3[2] => Mux5.IN2
in3[3] => Mux4.IN2
in3[4] => Mux3.IN2
in3[5] => Mux2.IN2
in3[6] => Mux1.IN2
in3[7] => Mux0.IN2
in4[0] => Mux7.IN3
in4[1] => Mux6.IN3
in4[2] => Mux5.IN3
in4[3] => Mux4.IN3
in4[4] => Mux3.IN3
in4[5] => Mux2.IN3
in4[6] => Mux1.IN3
in4[7] => Mux0.IN3
sel[0] => Mux0.IN5
sel[0] => Mux1.IN5
sel[0] => Mux2.IN5
sel[0] => Mux3.IN5
sel[0] => Mux4.IN5
sel[0] => Mux5.IN5
sel[0] => Mux6.IN5
sel[0] => Mux7.IN5
sel[1] => Mux0.IN4
sel[1] => Mux1.IN4
sel[1] => Mux2.IN4
sel[1] => Mux3.IN4
sel[1] => Mux4.IN4
sel[1] => Mux5.IN4
sel[1] => Mux6.IN4
sel[1] => Mux7.IN4
out[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


